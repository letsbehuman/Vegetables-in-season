[{"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\index.js":"1","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\reportWebVitals.js":"2","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\containers\\App.js":"3","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\library.js":"4","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\CardList.js":"5","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\SearchName.js":"6","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\Scrollcopy.js":"7","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\Card.jsx":"8"},{"size":489,"mtime":1645039534195,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1365,"mtime":1645477688641,"results":"12","hashOfConfig":"10"},{"size":5687,"mtime":1645477814099,"results":"13","hashOfConfig":"10"},{"size":455,"mtime":1645475143587,"results":"14","hashOfConfig":"10"},{"size":377,"mtime":1644867565157,"results":"15","hashOfConfig":"10"},{"size":215,"mtime":1644950795219,"results":"16","hashOfConfig":"10"},{"size":593,"mtime":1645477756683,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l5nnzg",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\index.js",[],[],"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\reportWebVitals.js",[],[],"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\containers\\App.js",["44"],[],"import \"./App.css\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchName from \"../components/SearchName\";\r\nimport Scroll from \"../components/Scrollcopy\";\r\nimport { library } from \"../library\";\r\nimport React, { Component } from \"react\";\r\nimport image from \"../components/Aubergines.png\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      vegetable: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ vegetable: library });\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { vegetable, searchfield } = this.state;\r\n    const filterVegetables = vegetable.filter(({ name, type }) => {\r\n      return (\r\n        name.toLowerCase().includes(searchfield.toLowerCase()) ||\r\n        type.toLowerCase().includes(searchfield.toLowerCase())\r\n      );\r\n    });\r\n\r\n    // si pongo season no funciona pero con type si, se puede hacer mas limpio? check box\r\n\r\n    return (\r\n      <div className=\"tc\">\r\n        <h1 style={{ fontSize: \"4rem\" }}>Vegetables</h1>\r\n        <SearchName searchChange={this.onSearchChange} />\r\n        <Scroll>\r\n          <CardList vegetables={filterVegetables} />\r\n        </Scroll>\r\n        {/* como pongo varios filtros */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\library.js",[],[],"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\CardList.js",[],[],"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\SearchName.js",[],[],"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\Scrollcopy.js",[],[],"e:\\Proyectos\\Web Developer\\react\\Vegetables in season\\Vegetables-in-season\\src\\components\\Card.jsx",["45"],[],"import React from \"react\";\r\n\r\nconst Card = ({ name, type, season: seasons }) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img\r\n        alt=\"Veggie image\"\r\n        src={require(`../../public/vegetables/${name}.png`)}\r\n        height={150}\r\n      />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <h4>Type:</h4>\r\n        <p>{type}</p>\r\n        <h4>Season:</h4>\r\n        <p className=\"mw5\">\r\n          {seasons.map((season, i) => (i === 0 ? season : `-${season}`))}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n",{"ruleId":"46","severity":1,"message":"47","line":7,"column":8,"nodeType":"48","messageId":"49","endLine":7,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":6,"column":7,"nodeType":"52","endLine":10,"endColumn":9},"no-unused-vars","'image' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]