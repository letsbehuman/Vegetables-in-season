{"ast":null,"code":"var _jsxFileName = \"e:\\\\Proyectos\\\\Web Developer\\\\react\\\\seeds\\\\src\\\\containers\\\\App.js\";\nimport './App.css';\nimport CardList from \"../components/CardList\";\nimport SearchName from \"../components/SearchName\"; // import Scroll from \"../components/Scroll\";\n\nimport { library } from '../library';\nimport React, { Component } from 'react';\nimport { render } from '@testing-library/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      vegetable: library,\n      searchfield: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({});\n  }\n\n  render() {\n    const filterName = this.state.vegetable.filter(vegetable => {\n      return vegetable.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    }); // si pongo season no funciona pero con type si, se puede hacer mas limpio? check box\n\n    const onDropdownChange = value => {\n      console.log(value);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"Vegetables\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchName, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        vegetables: filterName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["e:/Proyectos/Web Developer/react/seeds/src/containers/App.js"],"names":["CardList","SearchName","library","React","Component","render","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","vegetable","componentDidMount","filterName","filter","name","toLowerCase","includes","onDropdownChange","console","log"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,wBAAvB;;;AAMA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAE;AACX;;AADW,SAYbC,cAZa,GAYGC,KAAD,IAAU;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACD,KAdY;;AAEX,SAAKC,KAAL,GAAW;AACTC,MAAAA,SAAS,EAAEb,OADF;AAETS,MAAAA,WAAW,EAAE;AAFJ,KAAX;AAID;;AAEDK,EAAAA,iBAAiB,GAAE;AACjB,SAAKN,QAAL,CAAc,EAAd;AACD;;AAMDL,EAAAA,MAAM,GAAE;AACJ,UAAMY,UAAU,GAAE,KAAKH,KAAL,CAAWC,SAAX,CAAqBG,MAArB,CAA4BH,SAAS,IAAE;AACzD,aAAOA,SAAS,CAACI,IAAV,CAAeC,WAAf,GAA6BC,QAA7B,CAAsC,KAAKP,KAAL,CAAWH,WAAX,CAAuBS,WAAvB,EAAtC,CAAP;AACD,KAFmB,CAAlB,CADI,CAKN;;AAGA,UAAME,gBAAgB,GAAGT,KAAD,IAAS;AAC/BU,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,KAFD;;AAIA,wBACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,YAAY,EAAE,KAAKL;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,UAAU,EAAES;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AArCyB;;AA8C5B,eAAeX,GAAf","sourcesContent":["import './App.css';\nimport CardList from \"../components/CardList\";\nimport SearchName from \"../components/SearchName\";\n// import Scroll from \"../components/Scroll\";\nimport {library} from '../library';\nimport React, {Component} from 'react';\nimport { render } from '@testing-library/react';\n\n\n\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state={\n      vegetable: library,\n      searchfield: ''\n    }\n  }\n\n  componentDidMount(){\n    this.setState({})\n  }\n\n  onSearchChange=(event)=> {\n    this.setState({ searchfield: event.target.value })\n  }\n\n  render(){\n      const filterName= this.state.vegetable.filter(vegetable=>{\n      return vegetable.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n\n    // si pongo season no funciona pero con type si, se puede hacer mas limpio? check box\n\n\n    const onDropdownChange =(value)=>{\n      console.log(value)\n    }\n\n    return(\n      <div className='tc'>\n        <h1 className='f1'>Vegetables</h1>\n        <SearchName searchChange={this.onSearchChange}/>\n        <CardList vegetables={filterName}/>\n        {/* como pongo varios filtros */}\n      </div>\n    );\n  }\n\n}\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}